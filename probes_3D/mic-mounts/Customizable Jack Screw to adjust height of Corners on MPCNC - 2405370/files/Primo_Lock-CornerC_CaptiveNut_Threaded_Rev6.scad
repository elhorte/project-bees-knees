//Remix of Lock-CornerC to make internal threaded for use with Turnbuckle Adjuster
//Remixed by: David Bunch   6/23/2017
//
//include <threadsRough.scad>
include <threads.scad>
//
Clearance = 0.4;    //How much clearance to add to Thread OD for internal Threads
OD = 31.9;
Mirror_LockC = 0;   //0 = No, 1= Mirror
                    //This part needs to be mirrored before cutting threads in it.

//Base_Ht = 1;        //Base Height to rest 1/2" EMT pipe on
Pit = 4;            //Pitch

Thread_Ht = 29-6;
Ht = 27.0;          //Original Flex foot is 40mm high
Base_Ht = 8;
//
Bot_Hole_OD = 5.2;
Side_Hole_Ht = 17;
Side_Hole_OD = 5.2;
Side_Head_OD = 8;
//Side_Nut_OD = 9.5;
module Side_Holes()
{
    translate([19.4,0,Side_Hole_Ht])
    rotate([90,0,0])
    cylinder(d=Side_Hole_OD,h=50,center=true,$fn=24);       //Drill all the Way thur

    translate([19.4,13,Side_Hole_Ht])
    rotate([-90,0,0])
    rotate([0,0,30])
    cylinder(d1=11,d2=11.74,h=3.45,$fn=40);         //Countersink for Screw head

    translate([19.4,-10,Side_Hole_Ht])
    rotate([90,0,0])
    rotate([0,0,30])
    hull()
    {
        cylinder(d=9.2376,h=.1,$fn=6);         //Countersink for Nut
        translate([0,0,6.45])
        cylinder(d=9.84,h=.1,$fn=6);
    }
}
module Clamp()
{
    Z1 = 29;
    Z2 = 23.6;
    Z0 = 2.4;
    rotate([0,0,180])
    hull()
    {
        linear_extrude(height = Z1, center = false, convexity = 10)polygon(points = 
        [[-5.03,16.08],[-23,10.49],[-23.29,10.36],[-23.46,10.24],[-23.6,10.09],
        [-23.71,9.91],[-23.77,9.71],[-23.81,9.39],[-23.81,-9.39],[-23.78,-9.71],
        [-23.71,-9.91],[-23.6,-10.09],[-23.46,-10.24],[-23.29,-10.36],[-23,-10.49],
        [-5.03,-16.08],[-4.19,-16.32],[-3.37,-16.51],[-2.53,-16.66],[-1.69,-16.76],
        [-0.85,-16.83],[0.03,-16.85],[8.8,-16.85],[9.63,-16.81],[10.41,-16.69],
        [11.17,-16.5],[11.91,-16.24],[12.62,-15.9],[13.29,-15.5],[13.92,-15.03],
        [14.51,-14.51],[15.03,-13.92],[15.5,-13.29],[15.9,-12.62],[16.24,-11.91],
        [16.5,-11.17],[16.69,-10.41],[16.81,-9.63],[16.85,-8.8],[16.85,8.8],
        [16.81,9.63],[16.69,10.41],[16.5,11.17],[16.24,11.91],[15.9,12.62],
        [15.5,13.29],[15.03,13.92],[14.51,14.51],[13.92,15.03],[13.29,15.5],
        [12.62,15.9],[11.91,16.24],[11.17,16.5],[10.41,16.69],[9.63,16.81],
        [8.8,16.85],[0.03,16.85],[-0.85,16.83],[-1.69,16.76],[-2.53,16.66],
        [-3.37,16.51],[-4.19,16.32]]);
        translate([0,0,Z0])
        linear_extrude(height = Z2, center = false, convexity = 10)polygon(points = 
        [[-5.6,18],[-23.7,12.36],[-24.28,12.11],[-24.8,11.75],[-25.22,11.28],
        [-25.54,10.73],[-25.74,10.13],[-25.81,9.5],[-25.81,-9.5],[-25.74,-10.13],
        [-25.54,-10.73],[-25.23,-11.28],[-24.8,-11.75],[-24.28,-12.11],[-23.7,-12.36],
        [-5.6,-18],[-4.69,-18.26],[-3.77,-18.47],[-2.83,-18.64],[-1.89,-18.76],
        [-0.95,-18.83],[0,-18.85],[8.85,-18.85],[9.83,-18.8],[10.8,-18.66],
        [11.75,-18.42],[12.68,-18.09],[13.56,-17.67],[14.41,-17.17],[15.19,-16.58],
        [15.92,-15.92],[16.58,-15.19],[17.17,-14.41],[17.67,-13.56],[18.09,-12.68],
        [18.42,-11.75],[18.66,-10.8],[18.8,-9.83],[18.85,-8.85],[18.85,8.85],
        [18.8,9.83],[18.66,10.8],[18.42,11.75],[18.09,12.68],[17.67,13.56],
        [17.17,14.41],[16.58,15.19],[15.92,15.92],[15.19,16.58],[14.41,17.17],
        [13.56,17.67],[12.68,18.09],[11.75,18.42],[10.8,18.66],[9.83,18.8],
        [8.85,18.85],[0,18.85],[-0.95,18.83],[-1.89,18.76],[-2.83,18.64],
        [-3.77,18.47],[-4.69,18.26]]);
    }
}
module PlineCut()
{
    rotate([0,0,180])
    translate([0,0,-1])
    linear_extrude(height = 31, center = false, convexity = 10)polygon(points = 
    [[-25.2,1],[-25.43,1.05],[-25.62,1.18],[-25.75,1.37],[-25.8,1.6],
    [-26.8,1.6],[-26.8,-1.6],[-25.8,-1.6],[-25.75,-1.37],[-25.62,-1.18],
    [-25.43,-1.05],[-25.2,-1],[-15.08,-1],[-14.86,-1.04],[-14.68,-1.15],
    [-14.55,-1.33],[-14.48,-1.54],[-14.4,-2.21],[-14.28,-2.88],[-14.13,-3.54],
    [-13.95,-4.19],[-13.74,-4.84],[-13.5,-5.47],[-13.23,-6.09],[-12.93,-6.7],
    [-12.64,-6.95],[-12.26,-6.92],[-12.01,-6.62],[-12.04,-6.24],[-12.36,-5.59],
    [-12.64,-4.93],[-12.88,-4.25],[-13.09,-3.56],[-13.26,-2.86],[-13.39,-2.15],
    [-13.49,-1.44],[-13.55,-0.72],[-13.56,0],[-13.54,0.72],[-13.49,1.44],
    [-13.39,2.16],[-13.26,2.87],[-13.09,3.57],[-12.88,4.26],[-12.63,4.93],
    [-12.35,5.6],[-12.04,6.25],[-12.01,6.63],[-12.25,6.92],[-12.63,6.95],
    [-12.93,6.71],[-13.23,6.1],[-13.5,5.48],[-13.74,4.84],[-13.95,4.2],
    [-14.13,3.54],[-14.28,2.88],[-14.4,2.21],[-14.48,1.54],[-14.55,1.33],
    [-14.68,1.15],[-14.86,1.04],[-15.08,1]]);
}
module PlineRev()
{
    rotate_extrude($fn=72) polygon(points = 
    [[0,0],[0,13],[6.74,13],[6.97,12.96],[7.16,12.83],
    [7.29,12.64],[7.34,12.42],[7.48,8.58],[7.53,8.36],[7.66,8.17],
    [7.85,8.04],[8.08,8],[8.08,0]]);
}

module DrawFinal()
{
    difference()
    {
        union()
        {
            difference()
            {
                mirror([Mirror_LockC,0,0])
                Clamp();;
                PlineCut();
                mirror([Mirror_LockC,0,0])
                {
                    translate([0,0,-1])
                    cylinder(d=Bot_Hole_OD,h=Ht+2,$fn=24);
                    Side_Holes();
                }
        
                translate([0,0,Base_Ht])
                metric_thread (diameter=OD + Clearance, pitch=Pit, length=Thread_Ht, internal=false, angle = 40, thread_size = Pit,n_starts=1);
            }
            PlineRev();
        }
        translate([0,0,-1])
        cylinder(d=Bot_Hole_OD,h=Ht+2,$fn=24);
        rotate([0,0,30])
        hull()
        {
            translate([0,0,8])
            cylinder(d=9.2376,h=.01,$fn=6);
            translate([0,0,12.42])
            cylinder(d=9.5941,h=.01,$fn=6);
        }
        rotate([0,0,30])
        hull()
        {
            translate([0,0,12.42])
            cylinder(d=9.5941,h=.01,$fn=6);
            translate([0,0,13])
            cylinder(d=10.98,h=.01,$fn=6);
        }
    }
}
rotate([0,0,135])
DrawFinal();